[tool.poetry]
name = "mymodule"
version = "0.1.0"
description = ""
authors = ["sato taichi <sato.taichi@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.4"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
poethepoet = "^0.24.2"
black = "^24.2.0"
mypy = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 200

[tool.coverage.run]
branch = true
source = ["mymodule", "tests"]
omit = ["tests/fixtures/*"]
data_file = ".pytest_cache/.coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.coverage.xml]
output = ".pytest_cache/coverage.xml"

[tool.poe.tasks]
lint = "ruff check mymodule"
test = "pytest"
cover = "pytest --cov=mymodule --cov-report xml"
fmt = "ruff format ."
build = ["fmt", "lint", "test"]
